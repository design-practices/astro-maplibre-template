---
import type { JSX } from "astro/jsx-runtime";

const { tag, children, ...props } = Astro.props;

if (!tag) {
  throw new Error("Dynamic component requires a 'tag' prop.");
}

const validTag = tag as keyof JSX.IntrinsicElements;

const supportedTags = ["div", "span", "p", "ul", "li", "img", "a"] as const;

// Ensure the provided tag is valid
if (!supportedTags.includes(validTag as (typeof supportedTags)[number])) {
  throw new Error(`Unsupported tag: ${validTag}`);
}
---

{validTag === "div" && <div {...props}>{children}</div>}
{validTag === "span" && <span {...props}>{children}</span>}
{validTag === "p" && <p {...props}>{children}</p>}
{validTag === "ul" && <ul {...props}>{children}</ul>}
{validTag === "li" && <li {...props}>{children}</li>}
{validTag === "img" && <img {...props} />}
{validTag === "a" && <a {...props}>{children}</a>}

---

import { renderHTMLObject } from "@lib/utils";


// eslint-disable-next-line @typescript-eslint/no-explicit-any
const { data } = Astro.props;
console.log(data);
if (!data ) {
  throw new Error("HTMLObject requires a valid `data` prop with a `tag` property.");
}
// Normalize data into HTMLObject[]
// let htmlObjects: HTMLObject[] = Array.isArray(data) ? data : Object.entries(data).map(([key, value]) => ({ ...value, id: key })); 

// function renderHTMLObject(htmlObject: HTMLObject): string | JSX.Element {
//   const { tag, class: classes, id, style, props, content, children } = htmlObject;

//   const attributes = {
//     id,
//     class: classes?.join(" "),
//     style: style
//       ? Object.entries(style).map(([key, value]) => `${key}:${value}`).join("; ")
//       : undefined,
//     ...props?.reduce((acc, prop) => ({ ...acc, ...prop }), {}),
//   };

//   return (
//     <Dynamic tag={tag} {...attributes}>
//       {content || null}
//       {children ? children.map(renderHTMLObject) : null}
//     </Dynamic>
//   );
// }
---
<div>
  {renderHTMLObject(data)}
</div>
